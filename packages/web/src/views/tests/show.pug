extends ../layout

mixin toggles
  button(class="toggler flex flex-grow items-center text-left pl-4 self-stretch"  data-toggle)
    span(class="icon inline-block") ⌃

mixin test(title, state='loading')
  div(class=`test ${state}`)
    div(class=`flex items-center flex-row hover:bg-indigo-100 px-4 border-b-2 border-yellow`)
      h2(class=`text-xl py-5`)= title
      +toggles
      if state === 'loading'
        img(src="/img/loading.svg" class="spinner")

    div(class="test__description mx-4")
      block

mixin result_summary 
  div(class="test__summary mx-4 mb-2 mt-4")
    block

block content
  div(class="flex flex-col")
    h1(class="mt-8 ml-4 md:ml-0 text-4xl max-w")
      | Resultat för #{domain.domain_name}

  div(class="results flex flex-col mb-12")
    each group in groups
      section(class="test-group mb-8 mt-8")
        h1(class="text-3xl mb-2")= group.key 
        p(class="mt-1")= group.description

        +result_summary
          p 
            | <b>Resultat: </b>
            if group.is_passed
              | OK!
            else
              | Nope.


        each test in group.tests
          +test(test.key)
            p= test.title
            | !{md.render(test.description)}

        +test('test.label')
          p Alla DNS-servrar med IPv6-adresser kan nås för namnförfrågan.

          p(class="mt-2") <b>Tillvägagångssätt:</b> För varje IPv6 adress vi fick fram i föregående test, så ser vi om vi kan köra ett DNS-lookup.
        
block script
  script(type="application/javascript").
    const tests = document.querySelectorAll('.test-group > .test')
    for (const test of tests) {
      const togglers = test.querySelectorAll('[data-toggle]')
      for (const t of togglers) {
        t.addEventListener('click', function() {
          if (!test.classList.contains('loading'))
            test.classList.toggle('open')
        })
      }
    }

    const groups = document.querySelectorAll('.test-group')
    for (const group of groups) {
      const queue = Array.from(group.querySelectorAll('.test.loading'))
      console.log(queue)

      const MAX_TIME = 1000
      const MIN_TIME = 500

      function pop() {
        if (queue.length === 0) return
        const test = queue.shift()
        setTimeout(
          () => {
            test.classList.remove('loading')
            test.querySelector('img.spinner').remove()
            pop()
          },
          Math.random() * (MAX_TIME - MIN_TIME) + MIN_TIME
        )
      }
      pop()
    }